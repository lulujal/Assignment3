const request = require('supertest');
const jwt = require('jsonwebtoken');
const app = require('../app');
const User = require('../models/user');
let token;
describe('User endpoints', () => {
    

    beforeAll(async () => {
        try {
            await User.destroy({ where: {} });
            const user = await User.create({
                username: 'Test',
                email: 'test@example.com',
                password: 'password'
            });
            token = jwt.sign({ email: user.email }, 'secret');
        } catch (error) {
            console.log(error);
        }
    });

    afterAll(async () => {
        try {
            await User.destroy({ where: {} });
            
        } catch (error) {
            console.log(error);
        }
    });

    
    it('should add a new photo', async () => {
          const res = request(app)
            .post('/photos')
            .set('Authorization', `Bearer ${token}`)
            .send({
                    title: 'Test Photo',
                    caption: 'This is a test photo',
                    imageUrl: 'https://example.com/test-photo.jpg'
                })
            
                expect(res.status).toEqual(201)
                expect(res.body).toHaveProperty('id');
                expect(res.body.title).toEqual('Test Photo');
                expect(res.body.caption).toEqual('This is a test photo');
                expect(res.body.imageUrl).toEqual('https://example.com/test-photo.jpg');
                done();
            
        });
});


